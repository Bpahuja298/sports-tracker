{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Sports API\nexport const sportsApi = {\n  getAllSports: () => api.get('/sports'),\n  getSportById: id => api.get(`/sports/${id}`),\n  getSportByName: name => api.get(`/sports/name/${name}`),\n  createSport: sport => api.post('/sports', sport),\n  updateSport: (id, sport) => api.put(`/sports/${id}`, sport),\n  deleteSport: id => api.delete(`/sports/${id}`)\n};\n\n// Matches API\nexport const matchesApi = {\n  getAllMatches: () => api.get('/matches'),\n  getMatchById: id => api.get(`/matches/${id}`),\n  getLiveMatches: () => api.get('/matches/live'),\n  getUpcomingMatches: () => api.get('/matches/upcoming'),\n  getUpcomingMatchesBySport: sportId => api.get(`/matches/upcoming/sport/${sportId}`),\n  getMatchesBySport: sportId => api.get(`/matches/sport/${sportId}`),\n  createMatch: match => api.post('/matches', match),\n  updateMatch: (id, match) => api.put(`/matches/${id}`, match),\n  updateMatchScore: (id, scoreUpdate) => api.patch(`/matches/${id}/score`, scoreUpdate),\n  updateMatchStatus: (id, statusUpdate) => api.patch(`/matches/${id}/status`, statusUpdate),\n  deleteMatch: id => api.delete(`/matches/${id}`)\n};\n\n// Teams API (you'll need to create TeamController in backend)\nexport const teamsApi = {\n  getAllTeams: () => api.get('/teams'),\n  getTeamById: id => api.get(`/teams/${id}`),\n  getTeamsBySport: sportId => api.get(`/teams/sport/${sportId}`),\n  createTeam: team => api.post('/teams', team),\n  updateTeam: (id, team) => api.put(`/teams/${id}`, team),\n  deleteTeam: id => api.delete(`/teams/${id}`)\n};\n\n// Players API (you'll need to create PlayerController in backend)\nexport const playersApi = {\n  getAllPlayers: () => api.get('/players'),\n  getPlayerById: id => api.get(`/players/${id}`),\n  getPlayersByTeam: teamId => api.get(`/players/team/${teamId}`),\n  getPlayersBySport: sportId => api.get(`/players/sport/${sportId}`),\n  createPlayer: player => api.post('/players', player),\n  updatePlayer: (id, player) => api.put(`/players/${id}`, player),\n  deletePlayer: id => api.delete(`/players/${id}`)\n};\n\n// Users API (you'll need to create UserController in backend)\nexport const usersApi = {\n  getAllUsers: () => api.get('/users'),\n  getUserById: id => api.get(`/users/${id}`),\n  getUserByUsername: username => api.get(`/users/username/${username}`),\n  createUser: user => api.post('/users', user),\n  updateUser: (id, user) => api.put(`/users/${id}`, user),\n  addFavoriteTeam: (userId, teamId) => api.post(`/users/${userId}/favorites/teams/${teamId}`),\n  removeFavoriteTeam: (userId, teamId) => api.delete(`/users/${userId}/favorites/teams/${teamId}`),\n  addFavoritePlayer: (userId, playerId) => api.post(`/users/${userId}/favorites/players/${playerId}`),\n  removeFavoritePlayer: (userId, playerId) => api.delete(`/users/${userId}/favorites/players/${playerId}`),\n  addFavoriteSport: (userId, sportId) => api.post(`/users/${userId}/favorites/sports/${sportId}`),\n  removeFavoriteSport: (userId, sportId) => api.delete(`/users/${userId}/favorites/sports/${sportId}`),\n  deleteUser: id => api.delete(`/users/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","sportsApi","getAllSports","get","getSportById","id","getSportByName","name","createSport","sport","post","updateSport","put","deleteSport","delete","matchesApi","getAllMatches","getMatchById","getLiveMatches","getUpcomingMatches","getUpcomingMatchesBySport","sportId","getMatchesBySport","createMatch","match","updateMatch","updateMatchScore","scoreUpdate","patch","updateMatchStatus","statusUpdate","deleteMatch","teamsApi","getAllTeams","getTeamById","getTeamsBySport","createTeam","team","updateTeam","deleteTeam","playersApi","getAllPlayers","getPlayerById","getPlayersByTeam","teamId","getPlayersBySport","createPlayer","player","updatePlayer","deletePlayer","usersApi","getAllUsers","getUserById","getUserByUsername","username","createUser","user","updateUser","addFavoriteTeam","userId","removeFavoriteTeam","addFavoritePlayer","playerId","removeFavoritePlayer","addFavoriteSport","removeFavoriteSport","deleteUser"],"sources":["/Users/bhavuk.pahuja/sports-tracker/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8080/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Sports API\nexport const sportsApi = {\n  getAllSports: () => api.get('/sports'),\n  getSportById: (id) => api.get(`/sports/${id}`),\n  getSportByName: (name) => api.get(`/sports/name/${name}`),\n  createSport: (sport) => api.post('/sports', sport),\n  updateSport: (id, sport) => api.put(`/sports/${id}`, sport),\n  deleteSport: (id) => api.delete(`/sports/${id}`),\n};\n\n// Matches API\nexport const matchesApi = {\n  getAllMatches: () => api.get('/matches'),\n  getMatchById: (id) => api.get(`/matches/${id}`),\n  getLiveMatches: () => api.get('/matches/live'),\n  getUpcomingMatches: () => api.get('/matches/upcoming'),\n  getUpcomingMatchesBySport: (sportId) => api.get(`/matches/upcoming/sport/${sportId}`),\n  getMatchesBySport: (sportId) => api.get(`/matches/sport/${sportId}`),\n  createMatch: (match) => api.post('/matches', match),\n  updateMatch: (id, match) => api.put(`/matches/${id}`, match),\n  updateMatchScore: (id, scoreUpdate) => api.patch(`/matches/${id}/score`, scoreUpdate),\n  updateMatchStatus: (id, statusUpdate) => api.patch(`/matches/${id}/status`, statusUpdate),\n  deleteMatch: (id) => api.delete(`/matches/${id}`),\n};\n\n// Teams API (you'll need to create TeamController in backend)\nexport const teamsApi = {\n  getAllTeams: () => api.get('/teams'),\n  getTeamById: (id) => api.get(`/teams/${id}`),\n  getTeamsBySport: (sportId) => api.get(`/teams/sport/${sportId}`),\n  createTeam: (team) => api.post('/teams', team),\n  updateTeam: (id, team) => api.put(`/teams/${id}`, team),\n  deleteTeam: (id) => api.delete(`/teams/${id}`),\n};\n\n// Players API (you'll need to create PlayerController in backend)\nexport const playersApi = {\n  getAllPlayers: () => api.get('/players'),\n  getPlayerById: (id) => api.get(`/players/${id}`),\n  getPlayersByTeam: (teamId) => api.get(`/players/team/${teamId}`),\n  getPlayersBySport: (sportId) => api.get(`/players/sport/${sportId}`),\n  createPlayer: (player) => api.post('/players', player),\n  updatePlayer: (id, player) => api.put(`/players/${id}`, player),\n  deletePlayer: (id) => api.delete(`/players/${id}`),\n};\n\n// Users API (you'll need to create UserController in backend)\nexport const usersApi = {\n  getAllUsers: () => api.get('/users'),\n  getUserById: (id) => api.get(`/users/${id}`),\n  getUserByUsername: (username) => api.get(`/users/username/${username}`),\n  createUser: (user) => api.post('/users', user),\n  updateUser: (id, user) => api.put(`/users/${id}`, user),\n  addFavoriteTeam: (userId, teamId) => api.post(`/users/${userId}/favorites/teams/${teamId}`),\n  removeFavoriteTeam: (userId, teamId) => api.delete(`/users/${userId}/favorites/teams/${teamId}`),\n  addFavoritePlayer: (userId, playerId) => api.post(`/users/${userId}/favorites/players/${playerId}`),\n  removeFavoritePlayer: (userId, playerId) => api.delete(`/users/${userId}/favorites/players/${playerId}`),\n  addFavoriteSport: (userId, sportId) => api.post(`/users/${userId}/favorites/sports/${sportId}`),\n  removeFavoriteSport: (userId, sportId) => api.delete(`/users/${userId}/favorites/sports/${sportId}`),\n  deleteUser: (id) => api.delete(`/users/${id}`),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}